// -*- js2 -*-
// 	Processing.js Example

var MasterCircle = function( cpt, radius, num_of_points ) {
  this.num_of_points = num_of_points;
  this.circle = new ProCircle( cpt, radius );
  this.factor_larger = 1;
};

MasterCircle.prototype = {
  sub_circles: function() {
    var pts = this.circle.points(this.num_of_points);
    var sub_circles = new Array();
    var n_circle = null;
    var p_circle = null;
    
    for ( idx in pts ) {
      var center_pt = this.circle.cpt.point_on_segment(pts[idx], this.factor_larger);
      var circle = new ProCircle(center_pt, this.circle.radius);
      circle.prev_circle = p_circle;
      sub_circles[idx] = circle;
      p_circle = circle;
    }

    sub_circles[0].prev_circle = sub_circles[this.num_of_points - 1];
    n_circle = sub_circles[0];
    for ( var idx = this.num_of_points - 1; idx > -1; idx-- ) {
      sub_circles[idx].next_circle = n_circle;
      n_circle = sub_circles[idx];
    }
    return sub_circles;
  },
  
  draw_phase_5: function(context) {
    context.noLoop();
  },

  draw_phase_4: function(context) {
    var subs = this.sub_circles();
    for ( var idx = 0; idx < this.num_of_points; idx++ ) {
      var cc = subs[idx];
      var distance = cc.cpt.distance(cc.next_circle.cpt);
      var newCircle = new ProCircle(cc.cpt, distance);
      var pts = newCircle.intersection(new ProCircle(cc.next_circle.cpt,distance));
      fill(230,200,10);
      (new ProRect(cc.cpt, pts[0], cc.next_circle.cpt, pts[1])).draw(context);
    }
  },

  draw_phase_3: function(context) {
    var subs = this.sub_circles();
    for ( var idx = 0; idx < this.num_of_points; idx++ ) {
      var cc = subs[idx];

      var pt1 = cc.cpt;
      var pt2 = pt1.closest(cc.prev_circle.prev_circle.intersection(cc.next_circle));
      var pt3 = pt2.closest(cc.prev_circle.intersection(cc.next_circle));
      var pt4 = pt3.closest(cc.next_circle.next_circle.intersection(cc.prev_circle));

      fill(23,200,10);
      (new ProRect(pt1, pt2, pt3, pt4)).draw(context);
    }
  },

  draw_phase_2: function(context) {
    context.noFill();
    context.stroke(0,255,100);
    var subs = this.sub_circles();
    for ( c in subs ) { subs[c].draw(context); }
    this.circle.draw(context);
  },

  draw_phase_1: function(context) {
    context.noFill();
    context.stroke(0,255,100);
    var subs = this.sub_circles();
    this.circle.draw(context);
  },

  new_masters: function() {
    var subs = this.sub_circles();
    var ret_val = [];
    for ( c in subs ) { 
      ret_val.push(new MasterCircle( subs[c].cpt.clone(), subs[c].radius, 
                                     this.num_of_points));
    }
    return ret_val;
  },
};

var cnvs = document.getElementById('the_canvas');
cnvs.number_of_subcircles = 12;
cnvs.just_one_circle = true;
